---
# tasks file for k8s
- name: Ensure br_netfilter is enabled.
  modprobe:
    name: "{{ item }}"
    state: present
    persistent: present
  loop:
    - br_netfilter
    - overlay
- name: sysctl config
  sysctl:
    name: "{{ item }}"
    value: '1'
    reload: yes
    sysctl_file: /etc/sysctl.d/k8s.conf
    state: present
    sysctl_set: yes
  loop:
    - net.bridge.bridge-nf-call-ip6tables
    - net.bridge.bridge-nf-call-iptables
    - net.ipv4.ip_forward

- name: selinux config
  selinux:
    policy: targeted
    state: permissive

- name: stop firewalld
  service:
    name: firewalld
    state: stopped
    enabled: false

- name: swap off on runtime
  shell: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: swap off on fstab
  mount:
    name: none
    fstype: swap
    state: absent

- name: Install docker repository file
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo

- name: config repository for kubernetes
  yum_repository:
    name: kubernetes
    description: kubernetes repo
    baseurl: https://pkgs.k8s.io/core:/stable:/v1.31/rpm/
    enabled: yes
    gpgcheck: yes
    repo_gpgcheck: yes
    gpgkey:
      - https://pkgs.k8s.io/core:/stable:/v1.31/rpm/repodata/repomd.xml.key

- name: Install containerd and kubeadm
  yum:
    name: "{{ item }}"
    state: latest
  loop:
    - containerd
    - kubeadm
    - kubelet

- name: copy container config file
  copy:
    src: config.toml
    dest: /etc/containerd/config.toml

- name: enable service kubelet and cotnainerd
  service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - containerd
    - kubelet
- name: copy /etc/hosts
  copy:
    src: /etc/hosts
    dest: /etc/hosts

- name: Check if kubelet.conf exists
  stat:
    path: "{{ kube_config_dir }}/kubelet.conf"
    get_attributes: no
    get_checksum: no
    get_mime: no
  register: kubelet_conf

- name: init cluster
  shell: |
    kubeadm init --apiserver-advertise-address={{  hostvars[inventory_hostname]['ansible_' + mgmt_nic]['ipv4']['address'] }} \
                  --pod-network-cidr=192.168.0.0/16 \
                  --token={{ TOKEN }}
  when: inventory_hostname in groups['controlplanes'] and (not kubelet_conf.stat.exists)
  ignore_errors: yes

- name: join cluster
  shell: |
    kubeadm join --token={{ TOKEN }} \
                 --discovery-token-unsafe-skip-ca-verification \
                 {{ controlplane_IP}}:6443
  when: inventory_hostname in groups['worker_nodes'] and (not kubelet_conf.stat.exists)


- name: Copy admin config file from master
  become: true
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: /home/ansible-user/.kube/config
    flat: yes
  when: inventory_hostname in ['controlplane']

